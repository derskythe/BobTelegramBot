<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AllList" xml:space="preserve">
    <value>All list</value>
  </data>
  <data name="ATM" xml:space="preserve">
    <value>ATM</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="Bank" xml:space="preserve">
    <value>Branches</value>
  </data>
  <data name="BroadcastStopped" xml:space="preserve">
    <value>Broadcast was stopped</value>
  </data>
  <data name="BuyRate" xml:space="preserve">
    <value>Buy Rate</value>
  </data>
  <data name="CurrencyRates" xml:space="preserve">
    <value>Currency Rates</value>
  </data>
  <data name="DefaultMessage" xml:space="preserve">
    <value>Hi {0}
Please enter command or /help for command list</value>
  </data>
  <data name="EnterFeedback" xml:space="preserve">
    <value>Please enter your feedback in single message</value>
  </data>
  <data name="ErrorOccured" xml:space="preserve">
    <value>Error occured while sending message. Please, try again later</value>
  </data>
  <data name="Feedback" xml:space="preserve">
    <value>Feedback</value>
  </data>
  <data name="HelpMessage" xml:space="preserve">
    <value />
  </data>
  <data name="InvalidArguments" xml:space="preserve">
    <value>Invalid arguments</value>
  </data>
  <data name="InvalidKey" xml:space="preserve">
    <value>Invalid key</value>
  </data>
  <data name="InvalidResponse" xml:space="preserve">
    <value>Invalid response received</value>
  </data>
  <data name="Nearest" xml:space="preserve">
    <value>Nearest</value>
  </data>
  <data name="NoLocation" xml:space="preserve">
    <value>Can't found your location. Please, enable GPS</value>
  </data>
  <data name="NoNearestLocation" xml:space="preserve">
    <value>Can't found nearest places around you</value>
  </data>
  <data name="ResponseReceived" xml:space="preserve">
    <value>Response received</value>
  </data>
  <data name="SelectAction" xml:space="preserve">
    <value>Select Action</value>
  </data>
  <data name="SelectSendType" xml:space="preserve">
    <value>Select send type</value>
  </data>
  <data name="SelectType" xml:space="preserve">
    <value>Select type</value>
  </data>
  <data name="SellRate" xml:space="preserve">
    <value>Sell Rate</value>
  </data>
  <data name="SendMessagesBoth" xml:space="preserve">
    <value>Send all msg via SMS and Telegram</value>
  </data>
  <data name="SendMessagesTelegram" xml:space="preserve">
    <value>Send all messages to Telegram</value>
  </data>
  <data name="SendPhoneNumber" xml:space="preserve">
    <value>Send me your phone number</value>
  </data>
  <data name="TooManyFeedbacks" xml:space="preserve">
    <value>Too many feedbacks. Try again tomorrow</value>
  </data>
  <data name="Welcome" xml:space="preserve">
    <value>Welcome to Broadcast!</value>
  </data>
  <data name="SendMessageDisable" xml:space="preserve">
    <value>Disable Telegram</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="PageNavigation" xml:space="preserve">
    <value>Page {0} of {1}</value>
  </data>
  <data name="Prev" xml:space="preserve">
    <value>Prev.</value>
  </data>
  <data name="FeedbackSaved" xml:space="preserve">
    <value>Feedback saved!</value>
  </data>
  <data name="Saved" xml:space="preserve">
    <value>Settings saved</value>
  </data>
  <data name="CreditRequest" xml:space="preserve">
    <value>Credit request</value>
  </data>
  <data name="MyCredits" xml:space="preserve">
    <value>Credits</value>
  </data>
  <data name="CantFindYou" xml:space="preserve">
    <value>Can't find you. Do have credit account in our bank?</value>
  </data>
  <data name="CreditInfo" xml:space="preserve">
    <value>Credit Name: {0}
Credit number: {1}
Create date: {2}
Total credit amount: {3} {4}
Total amount left: {5} {4}
Amount to pay: {6} {4}</value>
  </data>
  <data name="CreditList" xml:space="preserve">
    <value>List of your credits</value>
  </data>
  <data name="DontHaveCredits" xml:space="preserve">
    <value>You don't have registered credits</value>
  </data>
  <data name="EnterBirthdate" xml:space="preserve">
    <value>Enter your birthday 
(DD.MM.YYYY, ex. 01.01.1900)</value>
  </data>
  <data name="EnterClientId" xml:space="preserve">
    <value>Enter your client ID (client code)</value>
  </data>
  <data name="InvalidBirthdate" xml:space="preserve">
    <value>Invalid birthday</value>
  </data>
  <data name="InvalidClientId" xml:space="preserve">
    <value>Invalid client ID</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="SendCreditRequest" xml:space="preserve">
    <value>Are you sure that you want to send a request for a credit for number {0}?</value>
  </data>
  <data name="TooManyRequests" xml:space="preserve">
    <value>Too many requests</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="Pay" xml:space="preserve">
    <value>Pay credit</value>
  </data>
  <data name="RequestSaved" xml:space="preserve">
    <value>Request saved</value>
  </data>
  <data name="CardRequest" xml:space="preserve">
    <value>Card request</value>
  </data>
  <data name="CashIn" xml:space="preserve">
    <value>Cash In</value>
  </data>
  <data name="CardOrdered" xml:space="preserve">
    <value>Congratulations, you completed the quest! Your data is transferred to the appropriate bank structures and the answer will not take long time to wait</value>
  </data>
  <data name="EnterCreditCardType" xml:space="preserve">
    <value>Select credit card type</value>
  </data>
  <data name="EnterCurrency" xml:space="preserve">
    <value>Select currency</value>
  </data>
  <data name="EnterEmail" xml:space="preserve">
    <value>Enter e-mail</value>
  </data>
  <data name="EnterFirstname" xml:space="preserve">
    <value>Enter your FirstName</value>
  </data>
  <data name="EnterHomePhone" xml:space="preserve">
    <value>Enter home phone number</value>
  </data>
  <data name="EnterLastname" xml:space="preserve">
    <value>Enter your Lastname</value>
  </data>
  <data name="EnterLastNameOnCard" xml:space="preserve">
    <value>Enter lastname on card (only English letters, please)</value>
  </data>
  <data name="EnterLivingAdress" xml:space="preserve">
    <value>Enter living address or type "same"</value>
  </data>
  <data name="EnterNameOnCard" xml:space="preserve">
    <value>Enter name on card (only English letters, please)</value>
  </data>
  <data name="EnterOrderType" xml:space="preserve">
    <value>Select order type</value>
  </data>
  <data name="EnterPassportBack" xml:space="preserve">
    <value>Send photo of back side of your passport (Şəxsiyyət vəsiqəsi)</value>
  </data>
  <data name="EnterPassportDate" xml:space="preserve">
    <value>Enter your passport date 
(DD.MM.YYYY, ex. 01.01.1900)</value>
  </data>
  <data name="EnterPassportFront" xml:space="preserve">
    <value>Send photo of front side of your passport (Şəxsiyyət vəsiqəsi)</value>
  </data>
  <data name="EnterPassportNumber" xml:space="preserve">
    <value>Enter passport number (Şəxsiyyət vəsiqəsi)</value>
  </data>
  <data name="EnterPassportOrgan" xml:space="preserve">
    <value>Enter passport authority organization</value>
  </data>
  <data name="EnterPatronymicName" xml:space="preserve">
    <value>Enter you Patronymic Name</value>
  </data>
  <data name="EnterPeriod" xml:space="preserve">
    <value>Select period</value>
  </data>
  <data name="EnterRegistrationAddress" xml:space="preserve">
    <value>Enter registration address</value>
  </data>
  <data name="EnterSecretWord" xml:space="preserve">
    <value>Enter secret word (only 10 letters max)</value>
  </data>
  <data name="EnterSex" xml:space="preserve">
    <value>Enter your sex</value>
  </data>
  <data name="EnterWorkPhone" xml:space="preserve">
    <value>Enter work phone number</value>
  </data>
  <data name="InvalidData" xml:space="preserve">
    <value>Invalid data, please try again</value>
  </data>
  <data name="InvalidFilesize" xml:space="preserve">
    <value>File is big, max allow filesize is {0} Kb.</value>
  </data>
  <data name="OneYear" xml:space="preserve">
    <value>One year</value>
  </data>
  <data name="OrderFast" xml:space="preserve">
    <value>Fast order (+15 AZN)</value>
  </data>
  <data name="OrderNormal" xml:space="preserve">
    <value>Normal</value>
  </data>
  <data name="PlasticCardRequestStep" xml:space="preserve">
    <value>Step {0} of {1}</value>
  </data>
  <data name="SexFemale" xml:space="preserve">
    <value>Female</value>
  </data>
  <data name="SexMale" xml:space="preserve">
    <value>Male</value>
  </data>
  <data name="ThreeYear" xml:space="preserve">
    <value>Three years</value>
  </data>
  <data name="TwoYear" xml:space="preserve">
    <value>Two years</value>
  </data>
  <data name="WaitAMoment" xml:space="preserve">
    <value>We are collectiong all data. Please wait</value>
  </data>
  <data name="CurrencyCalculator" xml:space="preserve">
    <value>Currency calculator</value>
  </data>
  <data name="EnterValue" xml:space="preserve">
    <value>Enter value</value>
  </data>
  <data name="Result" xml:space="preserve">
    <value>Result</value>
  </data>
  <data name="SelectBuyCurrency" xml:space="preserve">
    <value>Select *BUY* currency</value>
  </data>
  <data name="SelectSellCurrency" xml:space="preserve">
    <value>Select *SELL* currency</value>
  </data>
  <data name="EnterBranch" xml:space="preserve">
    <value>Select branch</value>
  </data>
</root>